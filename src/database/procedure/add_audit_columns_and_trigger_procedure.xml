<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
 xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
 xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
 <changeSet id="380a998f9ddb800b0409fbd873590142bcca9cd0" author="(WKSP_IUWORKSPACE)-Generated" failOnError="true"    runOnChange="false"  runAlways="false"  runInTransaction="false"  >
  <n0:createOracleProcedure objectName="ADD_AUDIT_COLUMNS_AND_TRIGGER" objectType="PROCEDURE" ownerName="WKSP_IUWORKSPACE"  replaceIfExists="false" >
    <n0:source><![CDATA[CREATE OR REPLACE EDITIONABLE PROCEDURE "%USER_NAME%"."ADD_AUDIT_COLUMNS_AND_TRIGGER" (
    p_table_name    IN VARCHAR2
) AS
    v_column_exists NUMBER;
BEGIN
    -- Add `created_at` column and constraint if not exist
    SELECT COUNT(*)
    INTO v_column_exists
    FROM USER_TAB_COLUMNS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND COLUMN_NAME = 'CREATED_AT';

    IF v_column_exists = 0 THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' ADD (
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
        )';
    END IF;

    -- Add `created_by` column if not exist
    SELECT COUNT(*)
    INTO v_column_exists
    FROM USER_TAB_COLUMNS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND COLUMN_NAME = 'CREATED_BY';

    IF v_column_exists = 0 THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' ADD (
            created_by VARCHAR(255)
        )';
    END IF;

    -- Add `updated_at` column and constraint if not exist
    SELECT COUNT(*)
    INTO v_column_exists
    FROM USER_TAB_COLUMNS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND COLUMN_NAME = 'UPDATED_AT';

    IF v_column_exists = 0 THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' ADD (
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
        )';
    END IF;

    -- Add `updated_by` column if not exist
    SELECT COUNT(*)
    INTO v_column_exists
    FROM USER_TAB_COLUMNS
    WHERE TABLE_NAME = UPPER(p_table_name)
      AND COLUMN_NAME = 'UPDATED_BY';

    IF v_column_exists = 0 THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ' || p_table_name || ' ADD (
            updated_by VARCHAR(255)
        )';
    END IF;

    -- Create Trigger for Automatically Updating `updated_at` and `updated_by`
    EXECUTE IMMEDIATE '
        CREATE OR REPLACE TRIGGER ' || p_table_name || '_audit_trg
        BEFORE INSERT OR UPDATE ON ' || p_table_name || '
        FOR EACH ROW
        BEGIN
            -- Set created_at and created_by on INSERT
            IF INSERTING THEN
                :NEW.created_at := SYSDATE;
                :NEW.created_by := v(''APP_USER'');
            END IF;

            -- Always set updated_at and updated_by
            :NEW.updated_at := SYSDATE;
            :NEW.updated_by := v(''APP_USER'');
        END;';
END;
/]]></n0:source>
      </n0:createOracleProcedure>
 </changeSet>
</databaseChangeLog>
